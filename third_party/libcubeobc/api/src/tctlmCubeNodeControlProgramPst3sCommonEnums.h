/************************************************************************************
 * This file was auto-generated by CIDEA                           .                *
 * Please do not modify the contents of this file manually.                         *
 ***********************************************************************************/

#ifndef TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__H
#define TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__H

#include <cubeObc/cubeObc_typeDef.h>
#include <cubeObc/cubeObc_errorDef.h>
#include <cubeObc/cubeObc_tctlmDef.h>

#ifdef __cplusplus
extern "C" {
#endif

/*******************************************************************************
 *******************************   DEFINES   ***********************************
 ******************************************************************************/

/*******************************************************************************
 *******************************   TYPEDEFS  ***********************************
 ******************************************************************************/

/**
 * @brief Enumeration for TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sHandle
*/
typedef enum TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sHandleEnum {
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__STR_0 = 0,          /**< STR0 handle */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__STR_1 = 1,          /**< STR1 handle */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__STR_2 = 2,          /**< STR2 handle */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__STR_3 = 3,          /**< STR3 handle */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__STR_INVALID = 4,    /**< Used to signal not-in-use */
} TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sHandle;

/**
 * @brief Enumeration for TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sApiVersion
*/
typedef enum TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sApiVersionEnum {
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__PST3S_API_VERSION_G2 = 0,     /**< PSST3S API Version G2 */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__PST3S_API_VERSION_H3 = 1,     /**< PSST3S API Version H3 */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__PST3S_API_VERSION_H31 = 2,    /**< PSST3S API Version H3.1 */
} TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sApiVersion;

/**
 * @brief Enumeration for TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sOperatingModes
*/
typedef enum TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sOperatingModesEnum {
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__MODE_INVALID = 0,       /**< Invalid Mode */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__NORMAL_MODE = 1,        /**< Normal Mode */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__FIXED_THRESHOLD = 2,    /**< Fixed Threshold */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__TEST = 3,               /**< Test Mode */
} TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sOperatingModes;

/**
 * @brief Enumeration for TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sDynamicModeEnum
*/
typedef enum TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sDynamicModeEnumEnum {
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__DYNAMIC_MODE_INVALID = 0,    /**< Invalid Dynamic Mode. Depends on PST3S Version */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__DYNAMIC_MODE_HIGH = 1,       /**< High Dynamic Mode */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__DYNAMIC_MODE_LOW = 2,        /**< Low Dynamic Mode */
} TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sDynamicModeEnum;

/**
 * @brief Enumeration for TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sSaaWorkingMode
*/
typedef enum TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sSaaWorkingModeEnum {
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__SAA_INVALID = 0,     /**< SAA Invalid. Depends on PST3S Version */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__SAA_OFF = 1,         /**< SAA Off */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__SAA_TRACKING = 2,    /**< SAA On when Tracking */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__SAA_CAPTURE = 3,     /**< SAA on when Capture */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__SAA_ALL = 4,         /**< SAA on when Tracking and Capture */
} TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sSaaWorkingMode;

/**
 * @brief Enumeration for TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sQFilteringSetState
*/
typedef enum TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sQFilteringSetStateEnum {
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__QFILTERING_SET_OFF = 0,    /**< Filtering Off */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__QFILTERING_SET_ON = 1,     /**< Filtering On */
} TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sQFilteringSetState;

/**
 * @brief Enumeration for TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sQFilteringGetState
*/
typedef enum TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sQFilteringGetStateEnum {
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__QFILTERING_GET_INVALID = 0,    /**< Filtering Invalid. Depends on PST3S Version */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__QFILTERING_GET_OFF = 1,        /**< Filtering Off */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__QFILTERING_GET_ON = 2,         /**< Filtering On */
} TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sQFilteringGetState;

/**
 * @brief Enumeration for TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sSelfTestResult
*/
typedef enum TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sSelfTestResultEnum {
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__TEST_INVALID = 0,    /**< Invalid */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__CORRECT = 1,         /**< Selt-test OK */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__ERROR = 2,           /**< Selt-test Error */
} TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sSelfTestResult;

/**
 * @brief Enumeration for TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sDataValid
*/
typedef enum TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sDataValidEnum {
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__GESTURE_VALID = 0,     /**< Gesture Data Valid */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__ATTITUDE_VALID = 1,    /**< Attitude Data Valid */
} TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sDataValid;

/**
 * @brief Enumeration for TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sExtImageState
*/
typedef enum TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sExtImageStateEnum {
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__IMAGE_INVALID = 0,    /**< External Image State Invalid for API version */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__IMAGE_OFF = 1,        /**< External Image State Off */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__IMAGE_ON = 2,         /**< External Image State On */
} TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sExtImageState;

/**
 * @brief Enumeration for TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sRateQuality
*/
typedef enum TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sRateQualityEnum {
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__RATE_INVALID = 0,    /**< Invalid - no velocity information */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__ESTIMATED = 1,       /**< Velocity is estimated from previous calculations */
    TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS__PRECISE = 2,         /**< Velocity is precise and calculated from attitude data */
} TctlmCubeNodeControlProgramPst3sCommonEnums_Pst3sRateQuality;


/*******************************************************************************
 *****************************   PROTOTYPES   **********************************
 ******************************************************************************/

#ifdef __cplusplus
}
#endif

#endif // TCTLM_CUBE_NODE_CONTROL_PROGRAM_PST3S_COMMON_ENUMS_H
